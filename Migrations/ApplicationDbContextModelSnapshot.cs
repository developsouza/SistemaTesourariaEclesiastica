// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaTesourariaEclesiastica.Data;

#nullable disable

namespace SistemaTesourariaEclesiastica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.CentroCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("CentrosCusto");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.ToTable("ContasBancarias");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.DetalheFechamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("FechamentoPeriodoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fornecedor")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MeioPagamento")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Membro")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanoContas")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoMovimento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FechamentoPeriodoId");

                    b.ToTable("DetalhesFechamento");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComprovanteUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("MeioDePagamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MembroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloRateioEntradaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanoDeContasId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("MeioDePagamentoId");

                    b.HasIndex("MembroId");

                    b.HasIndex("ModeloRateioEntradaId");

                    b.HasIndex("PlanoDeContasId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.FechamentoPeriodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BalancoDigital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalancoFisico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataSubmissao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SaldoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalEntradas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRateios")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSaidas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioAprovacaoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioSubmissaoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("UsuarioAprovacaoId");

                    b.HasIndex("UsuarioSubmissaoId");

                    b.ToTable("FechamentosPeriodo");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ItemRateioFechamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FechamentoPeriodoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("RegraRateioId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorRateio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FechamentoPeriodoId");

                    b.HasIndex("RegraRateioId");

                    b.ToTable("ItensRateioFechamento");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.LogAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Detalhes")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoIP")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<string>("Entidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EntidadeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogsAuditoria");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.MeioDePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("MeiosDePagamento");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Membro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataBatismo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("RG")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("CentroCustoId");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ModeloRateioEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PercentualCongregacao")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PercentualSede")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ModelosRateioEntrada");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.PlanoDeContas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("PlanosDeContas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.RegraRateio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoOrigemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoDestinoId");

                    b.HasIndex("CentroCustoOrigemId");

                    b.ToTable("RegrasRateio");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComprovanteUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeioDePagamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanoDeContasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoDespesa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("MeioDePagamentoId");

                    b.HasIndex("PlanoDeContasId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.TransferenciaInterna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentroCustoOrigemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("MeioDePagamentoDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeioDePagamentoOrigemId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Quitada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoDestinoId");

                    b.HasIndex("CentroCustoOrigemId");

                    b.HasIndex("MeioDePagamentoDestinoId");

                    b.HasIndex("MeioDePagamentoOrigemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TransferenciasInternas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ApplicationUser", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("Usuarios")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CentroCusto");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ContaBancaria", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("ContasBancarias")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.DetalheFechamento", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.FechamentoPeriodo", "FechamentoPeriodo")
                        .WithMany("DetalhesFechamento")
                        .HasForeignKey("FechamentoPeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FechamentoPeriodo");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Entrada", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("Entradas")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.MeioDePagamento", "MeioDePagamento")
                        .WithMany("Entradas")
                        .HasForeignKey("MeioDePagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.Membro", "Membro")
                        .WithMany("Entradas")
                        .HasForeignKey("MembroId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ModeloRateioEntrada", "ModeloRateioEntrada")
                        .WithMany("Entradas")
                        .HasForeignKey("ModeloRateioEntradaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaTesourariaEclesiastica.Models.PlanoDeContas", "PlanoDeContas")
                        .WithMany("Entradas")
                        .HasForeignKey("PlanoDeContasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("MeioDePagamento");

                    b.Navigation("Membro");

                    b.Navigation("ModeloRateioEntrada");

                    b.Navigation("PlanoDeContas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.FechamentoPeriodo", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("FechamentosPeriodo")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "UsuarioAprovacao")
                        .WithMany()
                        .HasForeignKey("UsuarioAprovacaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "UsuarioSubmissao")
                        .WithMany()
                        .HasForeignKey("UsuarioSubmissaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("UsuarioAprovacao");

                    b.Navigation("UsuarioSubmissao");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ItemRateioFechamento", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.FechamentoPeriodo", "FechamentoPeriodo")
                        .WithMany("ItensRateio")
                        .HasForeignKey("FechamentoPeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.RegraRateio", "RegraRateio")
                        .WithMany("ItensRateio")
                        .HasForeignKey("RegraRateioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FechamentoPeriodo");

                    b.Navigation("RegraRateio");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.LogAuditoria", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Membro", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("Membros")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.RegraRateio", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCustoDestino")
                        .WithMany()
                        .HasForeignKey("CentroCustoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCustoOrigem")
                        .WithMany()
                        .HasForeignKey("CentroCustoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCustoDestino");

                    b.Navigation("CentroCustoOrigem");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Saida", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCusto")
                        .WithMany("Saidas")
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.Fornecedor", "Fornecedor")
                        .WithMany("Saidas")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaTesourariaEclesiastica.Models.MeioDePagamento", "MeioDePagamento")
                        .WithMany("Saidas")
                        .HasForeignKey("MeioDePagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.PlanoDeContas", "PlanoDeContas")
                        .WithMany("Saidas")
                        .HasForeignKey("PlanoDeContasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("Fornecedor");

                    b.Navigation("MeioDePagamento");

                    b.Navigation("PlanoDeContas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.TransferenciaInterna", b =>
                {
                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCustoDestino")
                        .WithMany("TransferenciasDestino")
                        .HasForeignKey("CentroCustoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.CentroCusto", "CentroCustoOrigem")
                        .WithMany("TransferenciasOrigem")
                        .HasForeignKey("CentroCustoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.MeioDePagamento", "MeioDePagamentoDestino")
                        .WithMany("TransferenciasDestino")
                        .HasForeignKey("MeioDePagamentoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.MeioDePagamento", "MeioDePagamentoOrigem")
                        .WithMany("TransferenciasOrigem")
                        .HasForeignKey("MeioDePagamentoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaTesourariaEclesiastica.Models.ApplicationUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCustoDestino");

                    b.Navigation("CentroCustoOrigem");

                    b.Navigation("MeioDePagamentoDestino");

                    b.Navigation("MeioDePagamentoOrigem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.CentroCusto", b =>
                {
                    b.Navigation("ContasBancarias");

                    b.Navigation("Entradas");

                    b.Navigation("FechamentosPeriodo");

                    b.Navigation("Membros");

                    b.Navigation("Saidas");

                    b.Navigation("TransferenciasDestino");

                    b.Navigation("TransferenciasOrigem");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.FechamentoPeriodo", b =>
                {
                    b.Navigation("DetalhesFechamento");

                    b.Navigation("ItensRateio");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Fornecedor", b =>
                {
                    b.Navigation("Saidas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.MeioDePagamento", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");

                    b.Navigation("TransferenciasDestino");

                    b.Navigation("TransferenciasOrigem");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.Membro", b =>
                {
                    b.Navigation("Entradas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.ModeloRateioEntrada", b =>
                {
                    b.Navigation("Entradas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.PlanoDeContas", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");
                });

            modelBuilder.Entity("SistemaTesourariaEclesiastica.Models.RegraRateio", b =>
                {
                    b.Navigation("ItensRateio");
                });
#pragma warning restore 612, 618
        }
    }
}
