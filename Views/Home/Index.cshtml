@{
    ViewData["Title"] = "Dashboard";
}

<!-- Cabeçalho -->
<div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4 gap-2">
    <div>
        <h1 class="h2 mb-2 fw-bold">
            <i class="bi bi-speedometer2 text-primary me-2"></i>
            Dashboard
        </h1>
        <p class="text-muted mb-0">Visão geral do sistema de tesouraria</p>
    </div>
    <div class="text-muted d-flex align-items-center">
        <i class="bi bi-calendar-event me-2"></i>
        <span id="currentDate" class="fw-semibold small"></span>
    </div>
</div>

<!-- Cards de Estatísticas -->
<div class="row g-3 g-md-4 mb-4">
    <!-- Entradas -->
    <div class="col-6 col-lg-3">
        <div class="card stat-card border-0 h-100">
            <div class="card-body p-3 p-md-4">
                <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center">
                    <div class="stat-icon-modern bg-success bg-opacity-10 text-success mb-2 mb-md-0 me-md-3">
                        <i class="bi bi-arrow-down-circle-fill"></i>
                    </div>
                    <div class="flex-grow-1">
                        <small class="text-uppercase fw-semibold text-muted d-block mb-1" style="font-size: 0.7rem; letter-spacing: 0.3px;">
                            Entradas
                        </small>
                        <h4 class="mb-0 fw-bold text-success" style="font-size: clamp(1.25rem, 4vw, 1.75rem);">
                            @ViewBag.EntradasMes
                        </h4>
                        <small class="text-muted d-none d-md-block">
                            <i class="bi bi-calendar-month me-1"></i>Este mês
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Saídas -->
    <div class="col-6 col-lg-3">
        <div class="card stat-card border-0 h-100">
            <div class="card-body p-3 p-md-4">
                <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center">
                    <div class="stat-icon-modern bg-danger bg-opacity-10 text-danger mb-2 mb-md-0 me-md-3">
                        <i class="bi bi-arrow-up-circle-fill"></i>
                    </div>
                    <div class="flex-grow-1">
                        <small class="text-uppercase fw-semibold text-muted d-block mb-1" style="font-size: 0.7rem; letter-spacing: 0.3px;">
                            Saídas
                        </small>
                        <h4 class="mb-0 fw-bold text-danger" style="font-size: clamp(1.25rem, 4vw, 1.75rem);">
                            @ViewBag.SaidasMes
                        </h4>
                        <small class="text-muted d-none d-md-block">
                            <i class="bi bi-calendar-month me-1"></i>Este mês
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Saldo -->
    <div class="col-6 col-lg-3">
        <div class="card stat-card border-0 h-100">
            <div class="card-body p-3 p-md-4">
                <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center">
                    <div class="stat-icon-modern bg-primary bg-opacity-10 text-primary mb-2 mb-md-0 me-md-3">
                        <i class="bi bi-wallet2"></i>
                    </div>
                    <div class="flex-grow-1">
                        <small class="text-uppercase fw-semibold text-muted d-block mb-1" style="font-size: 0.7rem; letter-spacing: 0.3px;">
                            Saldo
                        </small>
                        <h4 class="mb-0 fw-bold text-primary" style="font-size: clamp(1.25rem, 4vw, 1.75rem);">
                            @ViewBag.SaldoTotal
                        </h4>
                        <small class="text-muted d-none d-md-block">
                            <i class="bi bi-bank me-1"></i>Contas
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Dízimos -->
    <div class="col-6 col-lg-3">
        <div class="card stat-card border-0 h-100">
            <div class="card-body p-3 p-md-4">
                <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center">
                    <div class="stat-icon-modern bg-warning bg-opacity-10 text-warning mb-2 mb-md-0 me-md-3">
                        <i class="bi bi-heart-fill"></i>
                    </div>
                    <div class="flex-grow-1">
                        <small class="text-uppercase fw-semibold text-muted d-block mb-1" style="font-size: 0.7rem; letter-spacing: 0.3px;">
                            Dízimos
                        </small>
                        <h4 class="mb-0 fw-bold text-warning" style="font-size: clamp(1.25rem, 4vw, 1.75rem);">
                            @ViewBag.DizimosMes
                        </h4>
                        <small class="text-muted d-none d-md-block">
                            <i class="bi bi-calendar-month me-1"></i>Este mês
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Gráficos -->
<div class="row g-3 g-md-4 mb-4">
    <!-- Fluxo de Caixa -->
    <div class="col-12 col-lg-8">
        <div class="card border-0 h-100">
            <div class="card-header bg-white border-0 d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
                <div>
                    <h5 class="mb-1 fw-bold">
                        <i class="bi bi-graph-up text-primary me-2"></i>
                        Fluxo de Caixa
                    </h5>
                    <small class="text-muted d-none d-md-block">Últimos 6 meses</small>
                </div>
                <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2">
                    <i class="bi bi-calendar3 me-1"></i>6 meses
                </span>
            </div>
            <div class="card-body p-3 p-md-4">
                <canvas id="fluxoCaixaChart" height="100"></canvas>
            </div>
        </div>
    </div>

    <!-- Despesas -->
    <div class="col-12 col-lg-4">
        <div class="card border-0 h-100">
            <div class="card-header bg-white border-0">
                <h5 class="mb-1 fw-bold">
                    <i class="bi bi-pie-chart text-danger me-2"></i>
                    Despesas
                </h5>
                <small class="text-muted">Por categoria</small>
            </div>
            <div class="card-body p-3 p-md-4 d-flex align-items-center justify-content-center">
                <canvas id="despesasChart" height="200"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Tabelas -->
<div class="row g-3 g-md-4">
    <!-- Últimas Transações -->
    <div class="col-12 col-lg-8">
        <div class="card border-0">
            <div class="card-header bg-white border-0 d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
                <div>
                    <h5 class="mb-1 fw-bold">
                        <i class="bi bi-clock-history text-info me-2"></i>
                        Últimas Transações
                    </h5>
                    <small class="text-muted d-none d-md-block">Movimentações recentes</small>
                </div>
                <a asp-controller="Entradas" asp-action="Index" class="btn btn-sm btn-outline-primary">
                    Ver todas <i class="bi bi-arrow-right ms-1"></i>
                </a>
            </div>
            <div class="card-body p-0">
                @if (ViewBag.UltimasTransacoes != null && ViewBag.UltimasTransacoes.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light d-none d-md-table-header-group">
                                <tr>
                                    <th class="ps-3 ps-md-4">Tipo</th>
                                    <th>Descrição</th>
                                    <th>Data</th>
                                    <th class="text-end pe-3 pe-md-4">Valor</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transacao in ViewBag.UltimasTransacoes)
                                {
                                    <!-- Desktop -->
                                    <tr class="d-none d-md-table-row">
                                        <td class="ps-3 ps-md-4">
                                            @if (transacao.Tipo == "Entrada")
                                            {
                                                <span class="badge bg-success bg-opacity-10 text-success">
                                                    <i class="bi bi-arrow-down-circle me-1"></i>Entrada
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger bg-opacity-10 text-danger">
                                                    <i class="bi bi-arrow-up-circle me-1"></i>Saída
                                                </span>
                                            }
                                        </td>
                                        <td class="fw-semibold">@transacao.Descricao</td>
                                        <td class="text-muted">
                                            <i class="bi bi-calendar3 me-1"></i>
                                            @transacao.Data.ToString("dd/MM/yyyy")
                                        </td>
                                        <td class="text-end pe-3 pe-md-4 fw-bold">
                                            <span class="@(transacao.Tipo == "Entrada" ? "text-success" : "text-danger")">
                                                @transacao.Valor.ToString("C")
                                            </span>
                                        </td>
                                    </tr>

                                    <!-- Mobile -->
                                    <tr class="d-md-none">
                                        <td class="p-3">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <div class="flex-grow-1">
                                                    @if (transacao.Tipo == "Entrada")
                                                    {
                                                        <span class="badge bg-success bg-opacity-10 text-success small mb-1">
                                                            <i class="bi bi-arrow-down-circle me-1"></i>Entrada
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger bg-opacity-10 text-danger small mb-1">
                                                            <i class="bi bi-arrow-up-circle me-1"></i>Saída
                                                        </span>
                                                    }
                                                    <div class="fw-semibold">@transacao.Descricao</div>
                                                    <small class="text-muted">
                                                        <i class="bi bi-calendar3 me-1"></i>
                                                        @transacao.Data.ToString("dd/MM/yy")
                                                    </small>
                                                </div>
                                                <div class="text-end ms-2">
                                                    <div class="fw-bold @(transacao.Tipo == "Entrada" ? "text-success" : "text-danger")">
                                                        @transacao.Valor.ToString("C")
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5 text-muted">
                        <i class="bi bi-inbox display-4 opacity-25"></i>
                        <p class="mt-3 mb-0">Nenhuma transação recente.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Atividades -->
    <div class="col-12 col-lg-4">
        <div class="card border-0">
            <div class="card-header bg-white border-0">
                <h5 class="mb-1 fw-bold">
                    <i class="bi bi-activity text-success me-2"></i>
                    Atividades
                </h5>
                <small class="text-muted">Últimas ações</small>
            </div>
            <div class="card-body p-3" style="max-height: 400px; overflow-y: auto;">
                @if (ViewBag.AtividadesRecentes != null && ViewBag.AtividadesRecentes.Count > 0)
                {
                    <div class="timeline">
                        @foreach (var atividade in ViewBag.AtividadesRecentes)
                        {
                            <div class="timeline-item mb-3 pb-3 border-bottom">
                                <div class="d-flex gap-2 gap-md-3">
                                    <div class="flex-shrink-0">
                                        <div class="timeline-icon bg-primary bg-opacity-10 text-primary">
                                            <i class="bi bi-@atividade.Icone"></i>
                                        </div>
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="fw-semibold mb-1 small">@atividade.Acao</div>
                                        <small class="text-muted d-block mb-1">@atividade.Usuario</small>
                                        <small class="text-muted">
                                            <i class="bi bi-clock me-1"></i>
                                            @{
                                                var dias = (DateTime.Now - atividade.DataHora).Days;
                                                var tempo = dias == 0 ? "Hoje" : dias == 1 ? "Ontem" : $"{dias}d atrás";
                                            }
                                            @tempo
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-4">
                        <i class="bi bi-inbox display-4 opacity-25"></i>
                        <p class="mt-3 mb-0 small">Nenhuma atividade.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .timeline-icon {
        width: 36px;
        height: 36px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem;
    }

    .timeline-item:last-child {
        border-bottom: none !important;
        padding-bottom: 0 !important;
        margin-bottom: 0 !important;
    }

    .stat-card:hover .stat-icon-modern {
        animation: iconBounce 0.6s ease;
    }

    @@keyframes iconBounce {
        0%, 100%

    {
        transform: scale(1) rotate(0deg);
    }

    50% {
        transform: scale(1.15) rotate(5deg);
    }

    }

    @@media (max-width: 767px) {
        .stat-icon-modern

    {
        width: 44px;
        height: 44px;
        font-size: 1.25rem;
    }

    .timeline-icon {
        width: 32px;
        height: 32px;
        font-size: 0.875rem;
    }

    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Data atual
            const currentDate = new Date().toLocaleDateString('pt-BR', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            document.getElementById('currentDate').textContent =
                currentDate.charAt(0).toUpperCase() + currentDate.slice(1);

            // Configuração comum
            const commonOptions = {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: true,
                        position: window.innerWidth < 768 ? 'bottom' : 'bottom',
                        labels: {
                            padding: 12,
                            usePointStyle: true,
                            font: { size: window.innerWidth < 768 ? 10 : 12, weight: '600' }
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        padding: 12,
                        cornerRadius: 8,
                        titleFont: { size: 13, weight: 'bold' },
                        bodyFont: { size: 12 }
                    }
                }
            };

            // Dados
            const fluxoCaixaData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.FluxoCaixaData ?? new List<object>()));
            const despesasData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.DespesasData ?? new List<object>()));

            // Gráfico Fluxo
            const fluxoCtx = document.getElementById('fluxoCaixaChart');
            if (fluxoCtx && fluxoCaixaData.length > 0) {
                new Chart(fluxoCtx.getContext('2d'), {
                    type: 'line',
                    data: {
                        labels: fluxoCaixaData.map(item => item.mes),
                        datasets: [
                            {
                                label: 'Entradas',
                                data: fluxoCaixaData.map(item => item.entradas),
                                borderColor: '#10b981',
                                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                                borderWidth: 2,
                                tension: 0.4,
                                fill: true,
                                pointRadius: 4,
                                pointHoverRadius: 6,
                                pointBackgroundColor: '#10b981',
                                pointBorderWidth: 2,
                                pointBorderColor: '#fff'
                            },
                            {
                                label: 'Saídas',
                                data: fluxoCaixaData.map(item => item.saidas),
                                borderColor: '#ef4444',
                                backgroundColor: 'rgba(239, 68, 68, 0.1)',
                                borderWidth: 2,
                                tension: 0.4,
                                fill: true,
                                pointRadius: 4,
                                pointHoverRadius: 6,
                                pointBackgroundColor: '#ef4444',
                                pointBorderWidth: 2,
                                pointBorderColor: '#fff'
                            }
                        ]
                    },
                    options: {
                        ...commonOptions,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: value => 'R$ ' + value.toLocaleString('pt-BR'),
                                    font: { size: window.innerWidth < 768 ? 10 : 12 }
                                },
                                grid: { color: 'rgba(148, 163, 184, 0.1)' }
                            },
                            x: {
                                grid: { display: false },
                                ticks: { font: { size: window.innerWidth < 768 ? 10 : 12 } }
                            }
                        }
                    }
                });
            }

            // Gráfico Despesas
            const despesasCtx = document.getElementById('despesasChart');
            if (despesasCtx && despesasData.length > 0) {
                new Chart(despesasCtx.getContext('2d'), {
                    type: 'doughnut',
                    data: {
                        labels: despesasData.map(item => item.categoria),
                        datasets: [{
                            data: despesasData.map(item => item.valor),
                            backgroundColor: ['#2563eb', '#0ea5e9', '#10b981', '#f59e0b', '#ef4444'],
                            borderWidth: 0,
                            hoverOffset: 12
                        }]
                    },
                    options: {
                        ...commonOptions,
                        cutout: '60%',
                        plugins: {
                            ...commonOptions.plugins,
                            tooltip: {
                                ...commonOptions.plugins.tooltip,
                                callbacks: {
                                    label: (context) => {
                                        const label = context.label || '';
                                        const value = context.parsed || 0;
                                        return ` ${label}: R$ ${value.toLocaleString('pt-BR')}`;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}